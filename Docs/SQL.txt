BEGIN;

-- THIS QUERY RESETS THE DATABASE TO A DEFAULT STATE, BE SURE THAT IS WHAT YOU WANT BEFORE YOU USE IT!!!


-- Dropping all tables for a clean start

DROP TABLE IF EXISTS public.customer CASCADE;
DROP TABLE IF EXISTS public.orders CASCADE;
DROP TABLE IF EXISTS public.orderline CASCADE;
DROP TABLE IF EXISTS public.material CASCADE;
DROP TABLE IF EXISTS public.city CASCADE;
DROP TABLE IF EXISTS public.salesperson CASCADE;
DROP TABLE IF EXISTS public.variant CASCADE;


-- Creates the needed tables for the DB

CREATE TABLE IF NOT EXISTS public.customer
(
    phone_number integer NOT NULL,
    name character varying NOT NULL,
    address character varying NOT NULL,
    zip integer NOT NULL,
    email character varying NOT NULL,
    PRIMARY KEY (phone_number)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id serial NOT NULL,
    customer_number integer NOT NULL,
    salesperson_id integer NOT NULL,
    carport_height integer NOT NULL DEFAULT 210,
    carport_width integer NOT NULL,
    carport_length integer NOT NULL,
    shed_width integer,
    shed_length integer,
    status character varying NOT NULL,
    order_date date,
    delivery_date date,
    guide_id integer,
    svg text,
    order_price numeric(10, 2) NOT NULL,
    note character varying,
    cost_price numeric(10, 2) NOT NULL,
    PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.orderline
(
    orderline_id serial NOT NULL,
    order_id integer NOT NULL,
    variant_id integer NOT NULL,
    quantity integer NOT NULL,
    build_description character varying NOT NULL,
    orderline_price numeric(10, 2) NOT NULL,
    PRIMARY KEY (orderline_id)
);

CREATE TABLE IF NOT EXISTS public.material
(
    material_id integer NOT NULL,
    name character varying NOT NULL,
    price numeric(10, 2) NOT NULL,
    unit character varying NOT NULL,
    width integer,
    height integer,
    PRIMARY KEY (material_id)
);

CREATE TABLE IF NOT EXISTS public.city
(
    zip integer NOT NULL,
    city_name character varying NOT NULL,
    PRIMARY KEY (zip)
);

CREATE TABLE IF NOT EXISTS public.salesperson
(
    salesperson_id serial NOT NULL,
    name character varying NOT NULL,
    email character varying NOT NULL,
    phone_number integer NOT NULL,
    is_admin boolean NOT NULL,
    password character varying NOT NULL,
    PRIMARY KEY (salesperson_id)
);

CREATE TABLE IF NOT EXISTS public.variant
(
    variant_id serial NOT NULL,
    material_id integer NOT NULL,
    length integer,
    PRIMARY KEY (variant_id)
);


-- Adds contraints and foreignkeys to previously made tables

ALTER TABLE IF EXISTS public.customer
    ADD FOREIGN KEY (zip)
    REFERENCES public.city (zip) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE IF EXISTS public.orders
    ADD FOREIGN KEY (salesperson_id)
    REFERENCES public.salesperson (salesperson_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE IF EXISTS public.orders
    ADD FOREIGN KEY (customer_number)
    REFERENCES public.customer (phone_number) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE IF EXISTS public.orderline
    ADD FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE IF EXISTS public.orderline
    ADD FOREIGN KEY (variant_id)
    REFERENCES public.variant (variant_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE IF EXISTS public.variant
    ADD FOREIGN KEY (material_id)
    REFERENCES public.material (material_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


-- Populates the tables with mock-startup data

-- All prices are public salesprices x 0,3 so that we have profit margin to work with
-- To get the original price back (the public salesprice) simply do: Price x (1 / 0.3)
-- (This will be used for all logic when showing prices to the customer!)
-- Prices for wood and the rooftiles are kr/cm, while the prices for the other materials are kr/unit


-- Inserts for a few cities to use

INSERT INTO public.city (zip, city_name)
VALUES  (3400, 'Hillerød'),
        (4000, 'Roskilde'),
        (4600, 'Køge'),
        (2800, 'Lyngby'),
        (3000, 'Helsingør'),
        (3600, 'Frederikssund'),
        (4200, 'Slagelse');


-- Inserts the admin and a salesperson

INSERT INTO public.salesperson (name, email, phone_number, is_admin, password)
VALUES  ('Amin Admin', 'admin@fogcarport.dk', 87654321, true, 'admin'),
        ('Søren Sælger', 'sælger1@fogcarport.dk', 12345678, false, 'sælger');


-- Inserts for wood

INSERT INTO public.material (material_id, name, price, unit, width, height)
VALUES  (1, '25x200mm. Trykimprægneret bræt', 0.17, 'stk', 200, 25),
        (2, '25x125mm. Trykimprægneret bræt', 0.10, 'stk', 125, 25),
        (3, '38x73mm. Lægte ubehandlet', 0.05, 'stk', 73, 38 ),
        (4, '45x95mm. Reglar ubehandlet', 0.05, 'stk', 95, 45),
        (5, '45x195mm. Spærtræ ubehandlet', 0.16, 'stk', 195, 45),
        (6, '97x97mm. Trykimprægneret stolpe', 0.22, 'stk', 97, 97),
        (7, '19x100mm. Trykimprægneret bræt', 0.05, 'stk', 100, 19);


-- Inserts for tiles and other materials

INSERT INTO public.material (material_id, name, price, unit)
VALUES  (8, 'Plastmo Ecolite blåtonet tagplade', 0.18, 'stk'),
        (9, 'Plastmo bundskruer 200stk', 128.7, 'pakke'),
        (10, 'Hulbånd 1x20mm. 10mtr.', 89.7, 'rulle'),
        (11, 'Universal beslag 190mm. højre', 14.99, 'stk'),
        (12, 'Universal beslag 190mm. venstre', 14.99, 'stk'),
        (13, '4,5x60mm. skruer 200 stk', 32.7, 'pakke'),
        (14, '4x50mm. beslagskruer 250 stk', 41.7, 'pakke'),
        (15, '10x120mm. Bræddebolt', 125.7, 'pakke'),
        (16, '40x40x11mm. Firkantskiver', 134.7, 'pakke'),
        (17, '4,5x70mm. Skruer 200 stk', 71.7, 'pakke'),
        (18, '4,5x50mm. Skruer 300 stk', 44.7, 'pakke'),
        (19, '50x75mm. Stalddørsgreb', 80.7, 'sæt'),
        (20, '390mm. T Hængsel', 41.7, 'stk'),
        (21, '35mm. Vinkelbeslag', 2.39, 'stk');


-- Inserts for the variants of wood and the rooftiles
-- All lengths are in cm

INSERT INTO public.variant (material_id, length)
VALUES  (1, 250),
        (1, 280),
        (1, 310),
        (1, 340),
        (1, 370),
        (1, 400),
        (1, 430),
        (1, 460),
        (1, 490),
        (1, 520),
        (1, 550),
        (1, 580),
        (2, 250),
        (2, 280),
        (2, 310),
        (2, 340),
        (2, 370),
        (2, 400),
        (2, 430),
        (2, 460),
        (2, 490),
        (2, 520),
        (2, 550),
        (2, 580),
        (3, 250),
        (3, 280),
        (3, 310),
        (3, 340),
        (3, 370),
        (3, 400),
        (3, 430),
        (3, 460),
        (3, 490),
        (3, 520),
        (3, 550),
        (3, 580),
        (4, 150),
        (4, 180),
        (4, 210),
        (4, 240),
        (4, 270),
        (4, 300),
        (4, 330),
        (4, 360),
        (5, 320),
        (5, 350),
        (5, 380),
        (5, 410),
        (5, 440),
        (5, 470),
        (5, 500),
        (5, 530),
        (5, 560),
        (5, 590),
        (5, 620),
        (6, 300),
        (7, 180),
        (7, 210),
        (7, 240),
        (7, 270),
        (7, 300),
        (7, 330),
        (7, 360),
        (7, 390),
        (7, 420),
        (7, 450),
        (7, 480),
        (7, 510),
        (7, 540),
        (7, 570),
        (7, 600),
        (8, 300),
        (8, 330),
        (8, 360),
        (8, 390),
        (8, 420),
        (8, 450),
        (8, 480),
        (8, 510),
        (8, 540),
        (8, 570),
        (8, 600);


-- Inserts for the other material "variants"

INSERT INTO public.variant (material_id)
VALUES  (9),
        (10),
        (11),
        (12),
        (13),
        (14),
        (15),
        (16),
        (17),
        (18),
        (19),
        (20),
        (21);


-- Inserts three new customers

INSERT INTO public.customer (phone_number, name, address, zip, email)
VALUES
    (55512345, 'Mikkel Møller', 'Skovvej 12', 4000, 'mikkel@mail.dk'),
    (55523456, 'Lene Larsen', 'Bakkevej 7', 3600, 'lene@mail.dk'),
    (55534567, 'Anders Andersen', 'Strandvej 3', 3400, 'anders@mail.dk');


-- Inserts three orders where only one have added a shed

INSERT INTO public.orders (customer_number, salesperson_id, carport_height, carport_width, carport_length, shed_width, shed_length, status, order_date, delivery_date, order_price, cost_price, svg)
VALUES
    (55512345, 1, 230, 300, 500, null, null, 'Ny ordre', '2025-05-16', null, 20000, 20000,
     '<svg version="1.1"
           x="0" y="0"
           viewBox="0 0 300 500"  width="300px"
           height="500px" preserveAspectRatio="xMinYMin"><defs>
              <marker id="beginArrow" markerWidth="12" markerHeight="12" refX="0" refY="6" orient="auto">
                  <path d="M0,6 L12,0 L12,12 L0,6" style="fill: #000000;" />
              </marker>
              <marker id="endArrow" markerWidth="12" markerHeight="12" refX="12" refY="6" orient="auto">
                  <path d="M0,0 L12,6 L0,12 L0,0 " style="fill: #000000;" />
              </marker>
          </defs><rect x="0" y="0" height="500" width="300" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
          <rect x="0" y="35" height="5" width="300" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
          <rect x="0" y="465" height="5" width="300" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
          <rect x="0" y="0" height="500" width="5" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
          <rect x="55" y="0" height="500" width="5" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
          <rect x="110" y="0" height="500" width="5" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
          <rect x="165" y="0" height="500" width="5" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
          <rect x="220" y="0" height="500" width="5" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
          <rect x="275" y="0" height="500" width="5" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
          <rect x="35" y="35" height="15" width="15" style="stroke-width:3px; stroke:#000000; fill: #ffffff" />
          <rect x="35" y="455" height="15" width="15" style="stroke-width:3px; stroke:#000000; fill: #ffffff" />
          <rect x="250" y="35" height="15" width="15" style="stroke-width:3px; stroke:#000000; fill: #ffffff" />
          <rect x="250" y="455" height="15" width="15" style="stroke-width:3px; stroke:#000000; fill: #ffffff" />
          </svg>'),

    (55523456, 2, 230, 320, 550, null, null, 'Ny ordre', '2025-05-17', null, 25000, 25000,
     '<svg version="1.1" x="0" y="0" viewBox="0 0 320 550" width="320px" height="550px" preserveAspectRatio="xMinYMin">
         <defs>
             <marker id="beginArrow" markerWidth="12" markerHeight="12" refX="0" refY="6" orient="auto">
                 <path d="M0,6 L12,0 L12,12 L0,6" style="fill: #000000;" />
             </marker>
             <marker id="endArrow" markerWidth="12" markerHeight="12" refX="12" refY="6" orient="auto">
                 <path d="M0,0 L12,6 L0,12 L0,0" style="fill: #000000;" />
             </marker>
         </defs>
         <rect x="0" y="0" height="550" width="320" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
         <rect x="0" y="35" height="5" width="320" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
         <rect x="0" y="515" height="5" width="320" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
     </svg>'),

    (55534567, 2, 230, 350, 600, 150, 300, 'Ny ordre', '2025-05-18', null, 35000, 35000,
     '<svg version="1.1" x="0" y="0" viewBox="0 0 350 600" width="350px" height="600px" preserveAspectRatio="xMinYMin">
         <defs>
             <marker id="beginArrow" markerWidth="12" markerHeight="12" refX="0" refY="6" orient="auto">
                 <path d="M0,6 L12,0 L12,12 L0,6" style="fill: #000000;" />
             </marker>
             <marker id="endArrow" markerWidth="12" markerHeight="12" refX="12" refY="6" orient="auto">
                 <path d="M0,0 L12,6 L0,12 L0,0" style="fill: #000000;" />
             </marker>
         </defs>
         <rect x="0" y="0" height="600" width="350" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
         <rect x="0" y="35" height="5" width="350" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
         <rect x="0" y="565" height="5" width="350" style="stroke-width:2px; stroke:#000000; fill: #ffffff" />
         <!-- Skur -->
         <rect x="100" y="300" height="300" width="150" style="stroke-width:2px; stroke:#000000; fill: #bbbbbb" />
     </svg>');


COMMIT;
